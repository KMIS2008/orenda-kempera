{"version":3,"file":"static/js/219.f784aac5.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","components/Loader.js","components/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ContainerCast= styled.div`\npadding: ${p=>p.theme.spacing(2)};\nline-height: 2;\n`","import { useEffect, useState } from \"react\";\nimport {fetchActors} from \"../api\";\nimport { useParams } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport {ContainerCast} from \"./Cast.styled\";\nimport Loader from \"components/Loader\";\n\nexport default function Cast(){\n    const[loading, setIsLoading]=useState(false);\n    const[castInfo, setCastInfo]=useState([]);\n    const params = useParams();\n\n    useEffect(()=>{\n        const addCastInfo = async()=>{\n            try {\n                setIsLoading(true);\n                // setError(false);\n               \n                 const info = await fetchActors(params.movieId);\n                 setCastInfo(info)\n              \n               } catch (error) {\n                toast.error('ERORR. Please try reloading this page!');\n                // setError(true);\n               } finally {\n                 setIsLoading(false);\n               }\n        }\n        \n        addCastInfo();\n\n        if (!params.movieId) return;\n\n    },[params.movieId])\n\n    // const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n\n    return (\n        <ContainerCast>\n           {loading && (<Loader/>)}\n           <ul>\n           {castInfo.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id}>\n            <img\n              width=\"150px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n              }\n              alt={original_name}\n            />\n            <h5>{name}</h5>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n           </ul>\n           {castInfo.length === 0 && (<h3>We have not info about Cast </h3>)}\n           <ToastContainer/>            \n        </ContainerCast>\n    )\n\n}","\nimport { ThreeCircles } from  'react-loader-spinner'\n\nexport default function Loader (){\n  return (\n    <ThreeCircles\n    height=\"100\"\n    width=\"100\"\n    color=\"#4fa94d\"\n    wrapperStyle={{}}\n    wrapperClass=\"\"\n    visible={true}\n    ariaLabel=\"three-circles-rotating\"\n    outerCircleColor=\"\"\n    innerCircleColor=\"\"\n    middleCircleColor=\"\"\n  />\n  )\n  }","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingFilms(){\n    \n    const apiKey = '18a0b0a62e05a91cf2323f4a4ccd641e';\n    const url = `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data.results;\n}\n\nexport async function fetchKeywordFilms(keyword){\n    \n    const apiKey = '18a0b0a62e05a91cf2323f4a4ccd641e';\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&include_adult=false&language=en-US&page=1&query=${keyword}`;\n    const response = await axios.get(url);\n    return response.data.results;\n}\n\nexport async function fetchDitailsFilms(movieId){\n    \n    const apiKey = '18a0b0a62e05a91cf2323f4a4ccd641e';\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data;\n}\n\nexport async function fetchActors(movieId){\n    \n    const apiKey = '18a0b0a62e05a91cf2323f4a4ccd641e';\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data.cast;\n}\n\nexport async function fetchReviews(movieId){\n    \n    const apiKey = '18a0b0a62e05a91cf2323f4a4ccd641e';\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`;\n    const response = await axios.get(url);\n    return response.data.results;\n}\n\n\n//key api = 18a0b0a62e05a91cf2323f4a4ccd641e;\n// Ключ доступа к API eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxOGEwYjBhNjJlMDVhOTFjZjIzMjNmNGE0Y2NkNjQxZSIsInN1YiI6IjY1NWRmMGJmNjI5YjJjMDEzYmIwZWU3YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.95KOzx-VwZ-R4Aauy3hj6FQRYG3w3duBUt-BX1hWc1s\n\n\n\n"],"names":["ContainerCast","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","Cast","_useState","useState","_useState2","_slicedToArray","loading","setIsLoading","_useState3","_useState4","castInfo","setCastInfo","params","useParams","useEffect","addCastInfo","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","info","_context","prev","next","fetchActors","movieId","sent","t0","toast","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","map","_ref2","id","profile_path","original_name","name","character","width","src","concat","alt","length","ToastContainer","ThreeCircles","height","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","fetchTrendingFilms","_fetchTrendingFilms","url","response","axios","abrupt","data","results","fetchKeywordFilms","_x","_fetchKeywordFilms","_callee2","keyword","_context2","fetchDitailsFilms","_x2","_fetchDitailsFilms","_callee3","_context3","_x3","_fetchActors","_callee4","_context4","cast","fetchReviews","_x4","_fetchReviews","_callee5","_context5"],"sourceRoot":""}